<?php

/**
 * Implements hook_field_formatter_info().
 */
function taxonomy_term_css_field_formatter_info() {
  return array(
    'taxonomy_term_css' => array(
      'label' => t('CSS Class'),
      'field types' => array('taxonomy_term_reference'),
      'settings' => array(
	'css_prefix' => 'taxonomy-',
	'css_suffix' => ''
      ),
    ),
  );
}

function taxonomy_term_css_theme() {
  return array(
    'link_formatter_taxonomy_term_css' => array(
      'variables' => array('element' => NULL, 'field' => NULL),
    ),
  );
}

function taxonomy_term_css_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element['css_prefix'] = array(
    '#type' => 'textfield',
    '#title' => t('CSS Prefix'),
    '#default_value' => $settings['css_prefix'],
    '#description' => t('CSS class prefix')
  );
  $element['icon_css'] = array(
    '#type' => 'textfield',
    '#title' => t('CSS Suffix'),
    '#default_value' => $settings['css_suffix'],
    '#description' => t('CSS class suffix')
  );
return $element;
}

function taxonomy_term_css_field_settings_form_validate($element, &$form_state, $complete_form) {
/* Nothing for now */
}

function taxonomy_term_css_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  return sprintf('CSS: %s%s%s', check_plain($settings['css_prefix']), '(tid#)', check_plain($settings['css_suffix']));
}

/**
 * Implements hook_field_formatter_view().
 */
function taxonomy_term_css_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $elements = array();
  $i = array();

  $settings = $display['settings'];

  $t=array();
  foreach ($items as $i) {
    $t[]=drupal_html_class(sprintf('%s%s%s', $settings['css_prefix'], $i['tid'], $settings['css_suffix']));
  }

  $r=array();
  $r[]=array(
   '#markup' => implode(' ', $t),
  );

  return $r;
}

